version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5
      start_period: 10s

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/inventory
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/orders
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  mongodb_data:
  rabbitmq_data:
  elasticsearch_data: 